diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/agent.py os-walinuxagent-pexip/azurelinuxagent/agent.py
--- os-walinuxagent/azurelinuxagent/agent.py	2022-07-22 15:25:51.700491677 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/agent.py	2022-07-22 15:26:27.172454763 +0100
@@ -49,6 +49,10 @@
         self.conf_file_path = conf_file_path
         self.osutil = get_osutil()
 
+        #Init stdout log
+        level = logger.LogLevel.VERBOSE if verbose else logger.LogLevel.INFO
+        logger.add_logger_appender(logger.AppenderType.STDOUT, level)
+
         #Init config
         conf_file_path = self.conf_file_path \
                 if self.conf_file_path is not None \
@@ -142,11 +146,6 @@
         update_handler = get_update_handler()
         update_handler.run(debug)
 
-    def resourcedisk(self):
-        from azurelinuxagent.daemon.resourcedisk import get_resourcedisk_handler
-        resourcedisk_handler = get_resourcedisk_handler()
-        resourcedisk_handler.run()
-
     def show_configuration(self):
         configuration = conf.get_configuration()
         for k in sorted(configuration.keys()):
@@ -161,11 +160,6 @@
     if len(args) <= 0:
         args = sys.argv[1:]
     command, force, verbose, debug, conf_file_path = parse_args(args)
-
-    #Init stdout log
-    level = logger.LogLevel.VERBOSE if verbose else logger.LogLevel.INFO
-    logger.add_logger_appender(logger.AppenderType.STDOUT, level)
-
     if command == "version":
         version()
     elif command == "help":
@@ -187,8 +181,6 @@
                 agent.daemon()
             elif command == "run-exthandlers":
                 agent.run_exthandlers(debug)
-            elif command == "resourcedisk":
-                agent.resourcedisk()
             elif command == "show-configuration":
                 agent.show_configuration()
         except Exception:
@@ -219,8 +211,6 @@
             cmd = "deprovision+user"
         elif re.match("^([-/]*)deprovision", a):
             cmd = "deprovision"
-        elif re.match("^([-/]*)provision", a):
-            cmd = "provision"
         elif re.match("^([-/]*)daemon", a):
             cmd = "daemon"
         elif re.match("^([-/]*)start", a):
@@ -229,8 +219,6 @@
             cmd = "register-service"
         elif re.match("^([-/]*)run-exthandlers", a):
             cmd = "run-exthandlers"
-        elif re.match("^([-/]*)resourcedisk", a):
-            cmd = "resourcedisk"
         elif re.match("^([-/]*)version", a):
             cmd = "version"
         elif re.match("^([-/]*)verbose", a):
@@ -269,8 +257,8 @@
     s  = "\n"
     s += ("usage: {0} [-verbose] [-force] [-help] "
            "-configuration-path:<path to configuration file>"
-           "-provision|-deprovision[+user]|-register-service|-version|-daemon|-start|"
-           "-run-exthandlers||-resourcedisk-show-configuration]"
+           "-deprovision[+user]|-register-service|-version|-daemon|-start|"
+           "-run-exthandlers|-show-configuration]"
            "").format(sys.argv[0])
     s += "\n"
     return s
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/common/osutil/debian.py os-walinuxagent-pexip/azurelinuxagent/common/osutil/debian.py
--- os-walinuxagent/azurelinuxagent/common/osutil/debian.py	2022-07-22 15:25:51.700491677 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/common/osutil/debian.py	2022-07-22 15:26:27.172454763 +0100
@@ -43,10 +43,10 @@
         return shellutil.run("systemctl --job-mode=ignore-dependencies try-reload-or-restart ssh", chk_err=False)
 
     def stop_agent_service(self):
-        return shellutil.run("systemctl --job-mode=ignore-dependencies stop walinuxagent", chk_err=False)
+        return shellutil.run("service azurelinuxagent stop", chk_err=False)
 
     def start_agent_service(self):
-        return shellutil.run("systemctl --job-mode=ignore-dependencies start walinuxagent", chk_err=False)
+        return shellutil.run("service azurelinuxagent start", chk_err=False)
 
     def start_network(self):
         pass
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/common/osutil/default.py os-walinuxagent-pexip/azurelinuxagent/common/osutil/default.py
--- os-walinuxagent/azurelinuxagent/common/osutil/default.py	2022-07-22 15:25:51.700491677 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/common/osutil/default.py	2022-07-22 15:26:27.172454763 +0100
@@ -423,9 +423,9 @@
             return
 
         if expiration is not None:
-            cmd = "useradd -m {0} -s /bin/bash -e {1}".format(username, expiration)
+            cmd = "useradd -m {0} -e {1}".format(username, expiration)
         else:
-            cmd = "useradd -m {0} -s /bin/bash".format(username)
+            cmd = "useradd -m {0}".format(username)
         
         if comment is not None:
             cmd += " -c {0}".format(comment)
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/common/osutil/factory.py os-walinuxagent-pexip/azurelinuxagent/common/osutil/factory.py
--- os-walinuxagent/azurelinuxagent/common/osutil/factory.py	2022-07-22 15:25:51.700491677 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/common/osutil/factory.py	2022-07-22 15:26:28.724453133 +0100
@@ -22,7 +22,7 @@
 from .arch import ArchUtil
 from .clearlinux import ClearLinuxUtil
 from .coreos import CoreOSUtil
-from .debian import DebianOSModernUtil
+from .debian import DebianOSBaseUtil, DebianOSModernUtil
 from .freebsd import FreeBSDOSUtil
 from .openbsd import OpenBSDOSUtil
 from .redhat import RedhatOSUtil, Redhat6xOSUtil
@@ -35,6 +35,7 @@
 from .iosxe import IosxeOSUtil
 from .nsbsd import NSBSDOSUtil
 from .openwrt import OpenWRTOSUtil
+from .pexos import PexOSUtil
 
 from distutils.version import LooseVersion as Version
 
@@ -90,7 +91,10 @@
             return SUSEOSUtil()
 
     if distro_name == "debian":
-        return DebianOSModernUtil()
+        if "sid" in distro_version or Version(distro_version) > Version("7"):
+            return DebianOSModernUtil()
+        else:
+            return DebianOSBaseUtil()
 
     if distro_name == "redhat" \
             or distro_name == "centos" \
@@ -124,6 +128,9 @@
     if distro_name == "openwrt":
         return OpenWRTOSUtil()
 
+    if distro_name == "pexos":
+        return PexOSUtil()
+
     else:
         logger.warn("Unable to load distro implementation for {0}. Using "
                     "default distro implementation instead.",
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/common/osutil/pexos.py os-walinuxagent-pexip/azurelinuxagent/common/osutil/pexos.py
--- os-walinuxagent/azurelinuxagent/common/osutil/pexos.py	1970-01-01 01:00:00.000000000 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/common/osutil/pexos.py	2022-07-22 15:26:28.724453133 +0100
@@ -0,0 +1,116 @@
+from azurelinuxagent.common.exception import OSUtilError
+from azurelinuxagent.common.osutil.default import DefaultOSUtil
+
+class PexOSUtil(object):
+    def __init__(self):
+        self._default = DefaultOSUtil()
+        self.jit_enabled = False # ga/remoteaccess.py
+        self.service_name = self.get_service_name()
+
+    @staticmethod
+    def get_service_name():
+        return "walinuxagent"
+
+    def get_agent_conf_file_path(self):
+        # agent.py
+        return self._default.get_agent_conf_file_path()
+
+    def start_agent_service(self):
+        # agent.py
+        pass
+
+    def stop_agent_service(self):
+        # agent.py
+        pass
+
+    def register_agent_service(self):
+        # agent.py
+        pass
+
+
+    @staticmethod
+    def is_cgroups_supported():
+        # common/cgroups.py
+        return False
+
+    def get_total_cpu_ticks_since_boot(self):
+        # common/cgroup.py
+        return self._default.get_total_cpu_ticks_since_boot()
+
+
+    def is_dhcp_available(self):
+        # common/dhcp.py common/protocol/util.py
+        return False
+
+
+    def check_pid_alive(self, pid):
+        # daemon/main.py ga/env.py ga/update.py
+        return self._default.check_pid_alive(pid)
+
+
+    def get_instance_id(self):
+        # pa/provision/default.py
+        return ''
+
+
+    def get_dhcp_pid(self):
+        # ga/env.py
+        return []
+
+    def get_hostname_record(self):
+        # ga/env.py
+        return None
+
+    def remove_rules_files(self):
+        # ga/env.py
+        pass
+
+
+    def get_firewall_dropped_packets(self, dst_ip=None):
+        # ga/monitor.py
+        return 0
+
+    @staticmethod
+    def read_route_table():
+        # ga/monitor.py
+        return []
+
+    @staticmethod
+    def get_list_of_routes(route_table):
+        # ga/monitor.py
+        return []
+
+    def get_nic_state(self):
+        # ga/monitor.py
+        return {}
+
+    def get_total_mem(self):
+        # ga/monitor.py
+        return self._default.get_total_mem()
+
+    def get_processor_cores(self):
+        # ga/monitor.py cgroups.py
+        return self._default.get_processor_cores()
+
+
+    # For tests only: runtime configuration ensures these aren't used
+    def device_for_ide_port(self, port_id):
+        return None
+
+    def try_load_atapiix_mod(self):
+        return
+
+    def mount_dvd(self, **kwargs):
+        return self._default.mount_dvd(**kwargs)
+
+    def umount_dvd(self, **kwargs):
+        return self._default.umount_dvd(**kwargs)
+
+    def set_hostname(self, hostname):
+        return
+
+    def set_dhcp_hostname(self, hostname):
+        return
+
+    def del_root_password(self):
+        return
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/common/utils/shellutil.py os-walinuxagent-pexip/azurelinuxagent/common/utils/shellutil.py
--- os-walinuxagent/azurelinuxagent/common/utils/shellutil.py	2022-07-22 15:25:51.700491677 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/common/utils/shellutil.py	2022-07-22 15:26:27.176454759 +0100
@@ -87,6 +87,7 @@
         logger.verbose(u"Command: [{0}]", cmd)
     try:
         output = subprocess.check_output(cmd,
+                                         stderr=subprocess.STDOUT,
                                          shell=True)
         output = _encode_command_output(output)
     except subprocess.CalledProcessError as e:
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/daemon/main.py os-walinuxagent-pexip/azurelinuxagent/daemon/main.py
--- os-walinuxagent/azurelinuxagent/daemon/main.py	2022-07-22 15:25:27.000516999 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/daemon/main.py	2022-07-22 15:26:28.724453133 +0100
@@ -139,10 +139,6 @@
         if conf.get_resourcedisk_format():
             self.resourcedisk_handler.run()
 
-        # Always redetermine the protocol start (e.g., wireserver vs.
-        # on-premise) since a VHD can move between environments
-        self.protocol_util.clear_protocol()
-
         self.provision_handler.run()
 
         # Once we have the protocol, complete initialization of the telemetry fields
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/daemon/resourcedisk/default.py os-walinuxagent-pexip/azurelinuxagent/daemon/resourcedisk/default.py
--- os-walinuxagent/azurelinuxagent/daemon/resourcedisk/default.py	2022-07-22 15:25:51.700491677 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/daemon/resourcedisk/default.py	2022-07-22 15:26:28.724453133 +0100
@@ -18,7 +18,6 @@
 import os
 import re
 import stat
-import subprocess
 import sys
 import threading
 from time import sleep
@@ -32,7 +31,6 @@
 from azurelinuxagent.common.exception import ResourceDiskError
 from azurelinuxagent.common.osutil import get_osutil
 from azurelinuxagent.common.version import AGENT_NAME
-from azurelinuxagent.pa.provision.cloudinit import cloud_init_is_enabled
 
 DATALOSS_WARNING_FILE_NAME = "DATALOSS_WARNING_README.txt"
 DATA_LOSS_WARNING = """\
@@ -57,10 +55,6 @@
         disk_thread.start()
 
     def run(self):
-        if cloud_init_is_enabled():
-            logger.info('Using cloud-init for provisioning')
-            return
-
         mount_point = None
         if conf.get_resourcedisk_format():
             mount_point = self.activate_resource_disk()
@@ -94,8 +88,9 @@
             logger.error("Failed to enable swap {0}", e)
 
     def reread_partition_table(self, device):
-        shellutil.run("blockdev --rereadpt {0}".format(device),
-                      chk_err=False)
+        if shellutil.run("sfdisk -R {0}".format(device), chk_err=False):
+            shellutil.run("blockdev --rereadpt {0}".format(device),
+                          chk_err=False)
 
     def mount_resource_disk(self, mount_point):
         device = self.osutil.device_for_ide_port(1)
@@ -122,7 +117,7 @@
             raise ResourceDiskError(msg=msg, inner=ose)
 
         logger.info("Examining partition table")
-        ret = shellutil.run_get_output("blkid -o value -s PTTYPE {0}".format(device))
+        ret = shellutil.run_get_output("parted {0} print".format(device))
         if ret[0]:
             raise ResourceDiskError("Could not determine partition info for "
                                     "{0}: {1}".format(device, ret[1]))
@@ -133,9 +128,8 @@
         mkfs_string = "mkfs.{0} -{2} {1}".format(
             self.fs, partition, force_option)
 
-        if ret[1].strip() == "gpt":
+        if "gpt" in ret[1]:
             logger.info("GPT detected, finding partitions")
-            ret = shellutil.run_get_output("parted {0} print".format(device))
             parts = [x for x in ret[1].split("\n") if
                      re.match(r"^\s*[0-9]+", x)]
             logger.info("Found {0} GPT partition(s).", len(parts))
@@ -153,13 +147,21 @@
                 shellutil.run(mkfs_string)
         else:
             logger.info("GPT not detected, determining filesystem")
-            ret = shellutil.run_get_output("blkid -o value -s TYPE {0}".format(partition))
-            if ret[1].strip() == 'ntfs' and self.fs != 'ntfs':
+            ret = self.change_partition_type(
+                suppress_message=True,
+                option_str="{0} 1 -n".format(device))
+            ptype = ret[1].strip()
+            if ptype == "7" and self.fs != "ntfs":
                 logger.info("The partition is formatted with ntfs, updating "
                             "partition type to 83")
-                subprocess.call(['sfdisk', '-c', '-f', device, '1', '83'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
+                self.change_partition_type(
+                    suppress_message=False,
+                    option_str="{0} 1 83".format(device))
+                self.reread_partition_table(device)
                 logger.info("Format partition [{0}]", mkfs_string)
                 shellutil.run(mkfs_string)
+            else:
+                logger.info("The partition type is {0}", ptype)
 
         mount_options = conf.get_resourcedisk_mountoptions()
         mount_string = self.get_mount_string(mount_options,
@@ -214,6 +216,39 @@
                     self.fs)
         return mount_point
 
+    def change_partition_type(self, suppress_message, option_str):
+        """
+            use sfdisk to change partition type.
+            First try with --part-type; if fails, fall back to -c
+        """
+
+        command_to_use = '--part-type'
+        input = "sfdisk {0} {1} {2}".format(
+            command_to_use, '-f' if suppress_message else '', option_str)
+        err_code, output = shellutil.run_get_output(
+            input, chk_err=False, log_cmd=True)
+
+        # fall back to -c
+        if err_code != 0:
+            logger.info(
+                "sfdisk with --part-type failed [{0}], retrying with -c",
+                err_code)
+            command_to_use = '-c'
+            input = "sfdisk {0} {1} {2}".format(
+                command_to_use, '-f' if suppress_message else '', option_str)
+            err_code, output = shellutil.run_get_output(input, log_cmd=True)
+
+        if err_code == 0:
+            logger.info('{0} succeeded',
+                        input)
+        else:
+            logger.error('{0} failed [{1}: {2}]',
+                         input,
+                         err_code,
+                         output)
+
+        return err_code, output
+
     def get_mount_string(self, mount_options, partition, mount_point):
         if mount_options is not None:
             return 'mount -t {0} -o {1} {2} {3}'.format(
@@ -244,6 +279,20 @@
                 os.chmod(swapfile, swapfile_mode)
             return True
 
+        return False
+
+    @staticmethod
+    def check_existing_swap_file(swapfile, swaplist, size):
+        if swapfile in swaplist and os.path.isfile(swapfile) and os.path.getsize(swapfile) == size:
+            logger.info("Swap already enabled")
+            # restrict access to owner (remove all access from group, others)
+            swapfile_mode = os.stat(swapfile).st_mode
+            if swapfile_mode & (stat.S_IRWXG | stat.S_IRWXO):
+                swapfile_mode = swapfile_mode & ~(stat.S_IRWXG | stat.S_IRWXO)
+                logger.info("Changing mode of {0} to {1:o}".format(swapfile, swapfile_mode))
+                os.chmod(swapfile, swapfile_mode)
+            return True
+
         return False
 
     def create_swap_space(self, mount_point, size_mb):
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/ga/update.py os-walinuxagent-pexip/azurelinuxagent/ga/update.py
--- os-walinuxagent/azurelinuxagent/ga/update.py	2022-07-22 15:25:51.700491677 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/ga/update.py	2022-07-22 15:26:28.724453133 +0100
@@ -148,9 +148,6 @@
         if child_args is not None:
             agent_cmd = "{0} {1}".format(agent_cmd, child_args)
 
-        env = os.environ.copy()
-        env['PYTHONDONTWRITEBYTECODE'] = '1'
-
         try:
 
             # Launch the correct Python version for python-based agents
@@ -166,7 +163,7 @@
                 cwd=agent_dir,
                 stdout=sys.stdout,
                 stderr=sys.stderr,
-                env=env)
+                env=os.environ)
 
             logger.verbose(u"Agent {0} launched with command '{1}'", agent_name, agent_cmd)
 
@@ -480,7 +477,7 @@
     def _ensure_readonly_files(self):
         for g in READONLY_FILE_GLOBS:
             for path in glob.iglob(os.path.join(conf.get_lib_dir(), g)):
-                os.chmod(path, stat.S_IRUSR)
+                os.chmod(path, stat.S_IRUSR | stat.S_IWUSR)
 
     def _ensure_cgroups_initialized(self):
         configurator = CGroupConfigurator.get_instance()
@@ -662,6 +659,7 @@
 
         # Ignore new agents if updating is disabled
         if not conf.get_autoupdate_enabled():
+            logger.warn(u"Agent auto-update is disabled.")
             return False
 
         now = time.time()
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/pa/deprovision/factory.py os-walinuxagent-pexip/azurelinuxagent/pa/deprovision/factory.py
--- os-walinuxagent/azurelinuxagent/pa/deprovision/factory.py	2022-07-22 15:25:27.004516995 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/pa/deprovision/factory.py	2022-07-22 15:26:28.724453133 +0100
@@ -23,6 +23,7 @@
 from .clearlinux import ClearLinuxDeprovisionHandler
 from .coreos import CoreOSDeprovisionHandler
 from .ubuntu import UbuntuDeprovisionHandler, Ubuntu1804DeprovisionHandler
+from .pexos import PexOSDeprovisionHandler
 
 
 from distutils.version import LooseVersion as Version
@@ -42,6 +43,8 @@
         return CoreOSDeprovisionHandler()
     if "Clear Linux" in distro_full_name:
         return ClearLinuxDeprovisionHandler()
+    if distro_name == "pexos":
+        return PexOSDeprovisionHandler()
 
     return DeprovisionHandler()
 
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/azurelinuxagent/pa/deprovision/pexos.py os-walinuxagent-pexip/azurelinuxagent/pa/deprovision/pexos.py
--- os-walinuxagent/azurelinuxagent/pa/deprovision/pexos.py	1970-01-01 01:00:00.000000000 +0100
+++ os-walinuxagent-pexip/azurelinuxagent/pa/deprovision/pexos.py	2022-07-22 15:26:28.724453133 +0100
@@ -0,0 +1,9 @@
+class PexOSDeprovisionHandler(object):
+    def __init__(self):
+        pass
+
+    def run(self, force=False, deluser=False):
+        return
+
+    def run_changed_unique_id(self):
+        return
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/config/pexos/waagent.conf os-walinuxagent-pexip/config/pexos/waagent.conf
--- os-walinuxagent/config/pexos/waagent.conf	1970-01-01 01:00:00.000000000 +0100
+++ os-walinuxagent-pexip/config/pexos/waagent.conf	2022-07-22 15:26:28.724453133 +0100
@@ -0,0 +1,126 @@
+#
+# Microsoft Azure Linux Agent Configuration
+#
+
+# Enable instance creation
+Provisioning.Agent=disabled
+
+# Enable extension handling. Do not disable this unless you do not need password reset,
+# backup, monitoring, or any extension handling whatsoever.
+Extensions.Enabled=n
+
+# Password authentication for root account will be unavailable.
+Provisioning.DeleteRootPassword=n
+
+# Generate fresh host key pair.
+Provisioning.RegenerateSshHostKeyPair=n
+
+# Supported values are "rsa", "dsa", "ecdsa", "ed25519", and "auto".
+# The "auto" option is supported on OpenSSH 5.9 (2011) and later.
+Provisioning.SshHostKeyPairType=auto
+
+# Monitor host name changes and publish changes via DHCP requests.
+Provisioning.MonitorHostName=n
+
+# Decode CustomData from Base64.
+Provisioning.DecodeCustomData=n
+
+# Execute CustomData after provisioning.
+Provisioning.ExecuteCustomData=n
+
+# Algorithm used by crypt when generating password hash.
+#Provisioning.PasswordCryptId=6
+
+# Length of random salt used when generating password hash.
+#Provisioning.PasswordCryptSaltLength=10
+
+# Allow reset password of sys user
+Provisioning.AllowResetSysUser=n
+
+# Format if unformatted. If 'n', resource disk will not be mounted.
+ResourceDisk.Format=n
+
+# File system on the resource disk
+# Typically ext3 or ext4. FreeBSD images should use 'ufs2' here.
+ResourceDisk.Filesystem=ext4
+
+# Mount point for the resource disk
+ResourceDisk.MountPoint=/mnt/resource
+
+# Create and use swapfile on resource disk.
+ResourceDisk.EnableSwap=n
+
+# Size of the swapfile.
+ResourceDisk.SwapSizeMB=0
+
+# Comma-seperated list of mount options. See man(8) for valid options.
+ResourceDisk.MountOptions=None
+
+# Enable verbose logging (y|n)
+Logs.Verbose=n
+
+# Is FIPS enabled
+OS.EnableFIPS=n
+
+# Root device timeout in seconds.
+#OS.RootDeviceScsiTimeout=300
+
+# If "None", the system default version is used.
+OS.OpensslPath=None
+
+# Set the SSH ClientAliveInterval
+# OS.SshClientAliveInterval=180
+
+# Set the path to SSH keys and configuration files
+OS.SshDir=/etc/ssh
+
+# If set, agent will use proxy server to access internet
+#HttpProxy.Host=None
+#HttpProxy.Port=None
+
+# Detect Scvmm environment, default is n
+# DetectScvmmEnv=n
+
+#
+# Lib.Dir=/var/lib/waagent
+
+#
+# DVD.MountPoint=/mnt/cdrom/secure
+
+#
+Pid.File=/var/run/walinuxagent/waagent.pid
+
+#
+# Extension.LogDir=/var/log/azure
+
+#
+# Home.Dir=/home
+
+# Enable RDMA management and set up, should only be used in HPC images
+OS.EnableRDMA=n
+
+# Enable or disable goal state processing auto-update, default is enabled
+AutoUpdate.Enabled=n
+
+# Determine the update family, this should not be changed
+# AutoUpdate.GAFamily=Prod
+
+# Determine if the overprovisioning feature is enabled. If yes, hold extension
+# handling until inVMArtifactsProfile.OnHold is false.
+# Default is enabled
+# EnableOverProvisioning=y
+
+# Allow fallback to HTTP if HTTPS is unavailable
+# Note: Allowing HTTP (vs. HTTPS) may cause security risks
+# OS.AllowHTTP=n
+
+# Add firewall rules to protect access to Azure host node services
+# Note:
+# - The default is false to protect the state of existing VMs
+OS.EnableFirewall=n
+
+# Enforce control groups limits on the agent and extensions
+CGroups.EnforceLimits=n
+
+# CGroups which are excluded from limits, comma separated
+CGroups.Excluded=customscript,runcommand
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/setup.py os-walinuxagent-pexip/setup.py
--- os-walinuxagent/setup.py	2022-07-22 15:25:51.700491677 +0100
+++ os-walinuxagent-pexip/setup.py	2022-07-22 15:26:28.724453133 +0100
@@ -37,6 +37,11 @@
     data_files.append((dest, src))
 
 
+def set_bin_files(data_files, dest="/usr/sbin",
+                  src=["bin/waagent", "bin/waagent2.0"]):
+    data_files.append((dest, src))
+
+
 def set_conf_files(data_files, dest="/etc", src=["config/waagent.conf"]):
     data_files.append((dest, src))
 
@@ -79,6 +84,7 @@
     data_files = []
 
     if name == 'redhat' or name == 'centos':
+        set_bin_files(data_files)
         set_conf_files(data_files)
         set_logrotate_files(data_files)
         set_udev_files(data_files)
@@ -91,11 +97,13 @@
                 # TODO this is a mitigation to systemctl bug on 7.1
                 set_sysv_files(data_files)
     elif name == 'arch':
+        set_bin_files(data_files, dest="/usr/bin")
         set_conf_files(data_files, src=["config/arch/waagent.conf"])
         set_udev_files(data_files)
         set_systemd_files(data_files, dest='/usr/lib/systemd/system',
                           src=["init/arch/waagent.service"])
     elif name == 'coreos':
+        set_bin_files(data_files, dest="/usr/share/oem/bin")
         set_conf_files(data_files, dest="/usr/share/oem",
                        src=["config/coreos/waagent.conf"])
         set_logrotate_files(data_files)
@@ -103,11 +111,13 @@
         set_files(data_files, dest="/usr/share/oem",
                   src=["init/coreos/cloud-config.yml"])
     elif "Clear Linux" in fullname:
+        set_bin_files(data_files, dest="/usr/bin")
         set_conf_files(data_files, dest="/usr/share/defaults/waagent",
                        src=["config/clearlinux/waagent.conf"])
         set_systemd_files(data_files, dest='/usr/lib/systemd/system',
                           src=["init/clearlinux/waagent.service"])
     elif name == 'ubuntu':
+        set_bin_files(data_files)
         set_conf_files(data_files, src=["config/ubuntu/waagent.conf"])
         set_logrotate_files(data_files)
         set_udev_files(data_files)
@@ -125,6 +135,7 @@
             set_systemd_files(data_files,
                               src=["init/ubuntu/walinuxagent.service"])
     elif name == 'suse' or name == 'opensuse':
+        set_bin_files(data_files)
         set_conf_files(data_files, src=["config/suse/waagent.conf"])
         set_logrotate_files(data_files)
         set_udev_files(data_files)
@@ -138,12 +149,15 @@
             # sles 12+ and openSUSE 13.2+ use systemd
             set_systemd_files(data_files, dest='/usr/lib/systemd/system')
     elif name == 'freebsd':
+        set_bin_files(data_files, dest="/usr/local/sbin")
         set_conf_files(data_files, src=["config/freebsd/waagent.conf"])
         set_freebsd_rc_files(data_files)
     elif name == 'openbsd':
+        set_bin_files(data_files, dest="/usr/local/sbin")
         set_conf_files(data_files, src=["config/openbsd/waagent.conf"])
         set_openbsd_rc_files(data_files)
     elif name == 'debian':
+        set_bin_files(data_files)
         set_conf_files(data_files, src=["config/debian/waagent.conf"])
         set_logrotate_files(data_files)
         set_udev_files(data_files, dest="/lib/udev/rules.d")
@@ -163,8 +177,13 @@
         set_conf_files(data_files)
         set_logrotate_files(data_files)
         set_sysv_files(data_files, dest='/etc/init.d', src=["init/openwrt/waagent"])  
+    elif name == 'pexos':
+        set_bin_files(data_files)
+        set_conf_files(data_files, src=["config/pexos/waagent.conf"])
+        set_logrotate_files(data_files)
     else:
         # Use default setting
+        set_bin_files(data_files)
         set_conf_files(data_files)
         set_logrotate_files(data_files)
         set_udev_files(data_files)
@@ -244,8 +263,5 @@
     install_requires=requires,
     cmdclass={
         'install': install
-    },
-    entry_points = {
-        'console_scripts': ['waagent=azurelinuxagent.agent:main'],
-    },
+    }
 )
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/tests/common/dhcp/test_dhcp.py os-walinuxagent-pexip/tests/common/dhcp/test_dhcp.py
--- os-walinuxagent/tests/common/dhcp/test_dhcp.py	2022-07-22 15:25:27.004516995 +0100
+++ os-walinuxagent-pexip/tests/common/dhcp/test_dhcp.py	2022-07-22 15:26:28.724453133 +0100
@@ -15,10 +15,9 @@
 # Requires Python 2.6+ and Openssl 1.0+
 #
 
-import mock
 import azurelinuxagent.common.dhcp as dhcp
 import azurelinuxagent.common.osutil.default as osutil
-from tests.tools import AgentTestCase, open_patch, patch
+from tests.tools import AgentTestCase, mock_open, open_patch, patch
 
 
 class TestDHCP(AgentTestCase):
@@ -32,6 +31,7 @@
     def test_wireserver_route_exists(self):
         # setup
         dhcp_handler = dhcp.get_dhcp_handler()
+        dhcp_handler.osutil = osutil.DefaultOSUtil()
         self.assertTrue(dhcp_handler.endpoint is None)
         self.assertTrue(dhcp_handler.routes is None)
         self.assertTrue(dhcp_handler.gateway is None)
@@ -48,7 +48,7 @@
                         "00FCFFFF	0	0	0   \n"
 
         with patch("os.path.exists", return_value=True):
-            mo = mock.mock_open(read_data=routing_table)
+            mo = mock_open(read_data=routing_table)
             with patch(open_patch(), mo):
                 self.assertTrue(dhcp_handler.wireserver_route_exists)
 
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/tests/common/osutil/test_default.py os-walinuxagent-pexip/tests/common/osutil/test_default.py
--- os-walinuxagent/tests/common/osutil/test_default.py	2022-07-22 15:25:27.004516995 +0100
+++ os-walinuxagent-pexip/tests/common/osutil/test_default.py	2022-07-22 15:26:28.724453133 +0100
@@ -17,7 +17,6 @@
 
 import socket
 import glob
-import mock
 import traceback
 import os
 import tempfile
@@ -32,7 +31,7 @@
 from azurelinuxagent.common.osutil import get_osutil
 from azurelinuxagent.common.utils import fileutil
 from tests.tools import AgentTestCase, call, patch, open_patch, load_data, \
-    running_under_travis, skip_if_predicate_true
+    running_under_travis, skip_if_predicate_true, mock_open
 
 actual_get_proc_net_route = 'azurelinuxagent.common.osutil.default.DefaultOSUtil._get_proc_net_route'
 
@@ -110,14 +109,14 @@
     def test_empty_proc_net_route(self):
         routing_table = ""
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             self.assertEqual(len(osutil.DefaultOSUtil().read_route_table()), 0)
 
     def test_no_routes(self):
         routing_table = 'Iface\tDestination\tGateway \tFlags\tRefCnt\tUse\tMetric\tMask\t\tMTU\tWindow\tIRTT        \n'
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             raw_route_list = osutil.DefaultOSUtil().read_route_table()
 
@@ -126,7 +125,7 @@
     def test_bogus_proc_net_route(self):
         routing_table = 'Iface\tDestination\tGateway \tFlags\t\tUse\tMetric\t\neth0\t00000000\t00000000\t0001\t\t0\t0\n'
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             raw_route_list = osutil.DefaultOSUtil().read_route_table()
 
@@ -142,7 +141,7 @@
             'docker0\t002BA8C0\t00000000\t0001\t0\t0\t10\t00FFFFFF\t0\t0\t0    \n'
         known_sha1_hash = b'\x1e\xd1k\xae[\xf8\x9b\x1a\x13\xd0\xbbT\xa4\xe3Y\xa3\xdd\x0b\xbd\xa9'
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             raw_route_list = osutil.DefaultOSUtil().read_route_table()
 
@@ -225,7 +224,7 @@
         eth0	00345B0A	00000000	0001	0	    0	5	00000000	0	0	0   \n\
         lo	    00000000	01345B0A	0003	0	    0	1	00FCFFFF	0	0	0   \n"
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             self.assertFalse(osutil.DefaultOSUtil().is_primary_interface('lo'))
             self.assertTrue(osutil.DefaultOSUtil().is_primary_interface('eth0'))
@@ -239,7 +238,7 @@
         "bond0	10813FA8	0100000A	0007	0	    0	0	00000000	0	0	0   \n" \
         "bond0	FEA9FEA9	0100000A	0007	0	    0	0	00000000	0	0	0   \n"
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             self.assertFalse(osutil.DefaultOSUtil().is_primary_interface('eth0'))
             self.assertTrue(osutil.DefaultOSUtil().is_primary_interface('bond0'))
@@ -251,7 +250,7 @@
         high	00000000	01345B0A	0003	0	    0	5	00000000	0	0	0   \n\
         low1	00000000	01345B0A	0003	0	    0	1	00FCFFFF	0	0	0   \n"
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             self.assertTrue(osutil.DefaultOSUtil().is_primary_interface('low1'))
 
@@ -261,7 +260,7 @@
         first	00000000	01345B0A	0003	0	    0	1	00000000	0	0	0   \n\
         secnd	00000000	01345B0A	0003	0	    0	1	00FCFFFF	0	0	0   \n"
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             self.assertTrue(osutil.DefaultOSUtil().is_primary_interface('first'))
 
@@ -271,7 +270,7 @@
         nflg	00000000	01345B0A	0001	0	    0	1	00000000	0	0	0   \n\
         flgs	00000000	01345B0A	0003	0	    0	1	00FCFFFF	0	0	0   \n"
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             self.assertTrue(osutil.DefaultOSUtil().is_primary_interface('flgs'))
 
@@ -281,7 +280,7 @@
         ndst	00000001	01345B0A	0003	0	    0	1	00000000	0	0	0   \n\
         nflg	00000000	01345B0A	0001	0	    0	1	00FCFFFF	0	0	0   \n"
 
-        mo = mock.mock_open(read_data=routing_table)
+        mo = mock_open(read_data=routing_table)
         with patch(open_patch(), mo):
             self.assertFalse(osutil.DefaultOSUtil().is_primary_interface('ndst'))
             self.assertFalse(osutil.DefaultOSUtil().is_primary_interface('nflg'))
@@ -304,7 +303,7 @@
 
     def test_dhcp_lease_ubuntu(self):
         with patch.object(glob, "glob", return_value=['/var/lib/dhcp/dhclient.eth0.leases']):
-            with patch(open_patch(), mock.mock_open(read_data=load_data("dhcp.leases"))):
+            with patch(open_patch(), mock_open(read_data=load_data("dhcp.leases"))):
                 endpoint = get_osutil(distro_name='ubuntu', distro_version='12.04').get_dhcp_lease_endpoint()
                 self.assertTrue(endpoint is not None)
                 self.assertEqual(endpoint, "168.63.129.16")
@@ -324,13 +323,13 @@
          may set up a custom dns server on their vnet)
         """
         with patch.object(glob, "glob", return_value=['/var/lib/dhcp/dhclient.eth0.leases']):
-            with patch(open_patch(), mock.mock_open(read_data=load_data("dhcp.leases.custom.dns"))):
+            with patch(open_patch(), mock_open(read_data=load_data("dhcp.leases.custom.dns"))):
                 endpoint = get_osutil(distro_name='ubuntu', distro_version='14.04').get_dhcp_lease_endpoint()
                 self.assertEqual(endpoint, "168.63.129.16")
 
     def test_dhcp_lease_multi(self):
         with patch.object(glob, "glob", return_value=['/var/lib/dhcp/dhclient.eth0.leases']):
-            with patch(open_patch(), mock.mock_open(read_data=load_data("dhcp.leases.multi"))):
+            with patch(open_patch(), mock_open(read_data=load_data("dhcp.leases.multi"))):
                 endpoint = get_osutil(distro_name='ubuntu', distro_version='12.04').get_dhcp_lease_endpoint()
                 self.assertTrue(endpoint is not None)
                 self.assertEqual(endpoint, "168.63.129.2")
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/tests/common/test_version.py os-walinuxagent-pexip/tests/common/test_version.py
--- os-walinuxagent/tests/common/test_version.py	2022-07-22 15:25:27.004516995 +0100
+++ os-walinuxagent-pexip/tests/common/test_version.py	2022-07-22 15:26:28.724453133 +0100
@@ -17,7 +17,6 @@
 
 from __future__ import print_function
 
-import mock
 import os
 import textwrap
 
@@ -26,7 +25,7 @@
 from azurelinuxagent.common.version import set_current_agent, \
     AGENT_LONG_VERSION, AGENT_VERSION, AGENT_NAME, AGENT_NAME_PATTERN, \
     get_f5_platform, get_distro
-from tests.tools import AgentTestCase, open_patch, patch
+from tests.tools import AgentTestCase, mock_open, open_patch, patch
 
 
 def freebsd_system():
@@ -62,32 +61,32 @@
         AgentTestCase.setUp(self)
         return
 
-    @mock.patch('platform.system', side_effect=freebsd_system)
-    @mock.patch('re.sub', side_effect=freebsd_system_release)
+    @patch('platform.system', side_effect=freebsd_system)
+    @patch('re.sub', side_effect=freebsd_system_release)
     def test_distro_is_correct_format_when_freebsd(self, platform_system_name, mock_variable):
         osinfo = get_distro()
         freebsd_list = ['freebsd', "10.0", '', 'freebsd']
         self.assertListEqual(freebsd_list, osinfo)
         return
 
-    @mock.patch('platform.system', side_effect=openbsd_system)
-    @mock.patch('re.sub', side_effect=openbsd_system_release)
+    @patch('platform.system', side_effect=openbsd_system)
+    @patch('re.sub', side_effect=openbsd_system_release)
     def test_distro_is_correct_format_when_openbsd(self, platform_system_name, mock_variable):
         osinfo = get_distro()
         openbsd_list = ['openbsd', "20.0", '', 'openbsd']
         self.assertListEqual(openbsd_list, osinfo)
         return
 
-    @mock.patch('platform.system', side_effect=default_system)
-    @mock.patch('platform.dist', side_effect=default_system_no_linux_distro)
+    @patch('platform.system', side_effect=default_system)
+    @patch('platform.dist', side_effect=default_system_no_linux_distro)
     def test_distro_is_correct_format_when_default_case(self, platform_system_name, default_system_no_linux):
         osinfo = get_distro()
         default_list = ['', '', '', '']
         self.assertListEqual(default_list, osinfo)
         return
 
-    @mock.patch('platform.system', side_effect=default_system)
-    @mock.patch('platform.dist', side_effect=default_system_exception)
+    @patch('platform.system', side_effect=default_system)
+    @patch('platform.dist', side_effect=default_system_exception)
     def test_distro_is_correct_for_exception_case(self, platform_system_name, default_system_no_linux):
         osinfo = get_distro()
         default_list = ['unknown', 'FFFF', '', '']
@@ -151,7 +150,7 @@
         Changelist: 1874858
         JobID: 705993""")
 
-        mo = mock.mock_open(read_data=version_file)
+        mo = mock_open(read_data=version_file)
         with patch(open_patch(), mo):
             platform = get_f5_platform()
             self.assertTrue(platform[0] == 'bigip')
@@ -172,7 +171,7 @@
         Changelist: 1773831
         JobID: 673467""")
 
-        mo = mock.mock_open(read_data=version_file)
+        mo = mock_open(read_data=version_file)
         with patch(open_patch(), mo):
             platform = get_f5_platform()
             self.assertTrue(platform[0] == 'bigip')
@@ -193,7 +192,7 @@
         Changelist: 1486072
         JobID: 536212""")
 
-        mo = mock.mock_open(read_data=version_file)
+        mo = mock_open(read_data=version_file)
         with patch(open_patch(), mo):
             platform = get_f5_platform()
             self.assertTrue(platform[0] == 'bigip')
@@ -214,7 +213,7 @@
         Changelist: 1924048
         JobID: 734712""")
 
-        mo = mock.mock_open(read_data=version_file)
+        mo = mock_open(read_data=version_file)
         with patch(open_patch(), mo):
             platform = get_f5_platform()
             self.assertTrue(platform[0] == 'iworkflow')
@@ -235,7 +234,7 @@
         Changelist: 1907534
         JobID: 726344""")
 
-        mo = mock.mock_open(read_data=version_file)
+        mo = mock_open(read_data=version_file)
         with patch(open_patch(), mo):
             platform = get_f5_platform()
             self.assertTrue(platform[0] == 'bigiq')
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/tests/distro/test_scvmm.py os-walinuxagent-pexip/tests/distro/test_scvmm.py
--- os-walinuxagent/tests/distro/test_scvmm.py	2022-07-22 15:25:27.004516995 +0100
+++ os-walinuxagent-pexip/tests/distro/test_scvmm.py	2022-07-22 15:26:28.724453133 +0100
@@ -18,7 +18,6 @@
 # http://msdn.microsoft.com/en-us/library/cc227282%28PROT.10%29.aspx
 # http://msdn.microsoft.com/en-us/library/cc227259%28PROT.13%29.aspx
 
-import mock
 from tests.tools import AgentTestCase, Mock, patch
 import unittest
 
@@ -57,7 +56,7 @@
         conf.get_detect_scvmm_env = Mock(return_value=True)
 
         # execute
-        with mock.patch.object(DefaultOSUtil, 'mount_dvd') as patch_mount:
+        with patch.object(DefaultOSUtil, 'mount_dvd') as patch_mount:
             with patch('os.listdir', return_value=["sr0", "sr1", "sr2"]):
                 scvmm.ScvmmHandler().detect_scvmm_env()
                 # assert
@@ -75,7 +74,7 @@
         if os.path.exists(scvmm_file):
             os.remove(scvmm_file)
 
-        with mock.patch.object(scvmm.ScvmmHandler, 'start_scvmm_agent') as patch_start:
+        with patch.object(scvmm.ScvmmHandler, 'start_scvmm_agent') as patch_start:
             # execute
             scvmm.ScvmmHandler().detect_scvmm_env()
             # assert
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/tests/ga/test_exthandlers_download_extension.py os-walinuxagent-pexip/tests/ga/test_exthandlers_download_extension.py
--- os-walinuxagent/tests/ga/test_exthandlers_download_extension.py	2022-07-22 15:25:27.004516995 +0100
+++ os-walinuxagent-pexip/tests/ga/test_exthandlers_download_extension.py	2022-07-22 15:26:28.724453133 +0100
@@ -7,7 +7,7 @@
 from azurelinuxagent.common.protocol.wire import WireProtocol
 from azurelinuxagent.ga.exthandlers import ExtHandlerInstance, NUMBER_OF_DOWNLOAD_RETRIES
 from azurelinuxagent.common.exception import ExtensionDownloadError, ExtensionErrorCodes
-from tests.tools import AgentTestCase, patch
+from tests.tools import AgentTestCase, ANY, patch
 
 
 class DownloadExtensionTestCase(AgentTestCase):
@@ -105,8 +105,8 @@
                 self.ext_handler_instance.download()
 
         # first download attempt should succeed
-        mock_download_ext_handler_pkg.assert_called_once()
-        mock_report_event.assert_called_once()
+        mock_download_ext_handler_pkg.assert_called_once_with(ANY, ANY)
+        mock_report_event.assert_called_once_with(duration=ANY, message="Download succeeded")
 
         self._assert_download_and_expand_succeeded()
 
@@ -132,7 +132,7 @@
         with patch("azurelinuxagent.common.protocol.wire.WireProtocol.download_ext_handler_pkg", side_effect=download_ext_handler_pkg) as mock_download_ext_handler_pkg:
             self.ext_handler_instance.download()
 
-        mock_download_ext_handler_pkg.assert_called_once()
+        mock_download_ext_handler_pkg.assert_called_once_with(ANY, ANY)
 
         self._assert_download_and_expand_succeeded()
 
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/tests/ga/test_update.py os-walinuxagent-pexip/tests/ga/test_update.py
--- os-walinuxagent/tests/ga/test_update.py	2022-07-22 15:25:51.704491675 +0100
+++ os-walinuxagent-pexip/tests/ga/test_update.py	2022-07-22 15:26:28.724453133 +0100
@@ -787,7 +787,7 @@
         for path in test_files:
             mode = os.stat(path).st_mode
             mode &= (stat.S_IRWXU | stat.S_IRWXG | stat.S_IRWXO)
-            self.assertEqual(0, mode ^ stat.S_IRUSR)
+            self.assertEqual(0, mode ^ (stat.S_IRUSR | stat.S_IWUSR))
 
     def test_ensure_readonly_leaves_unmodified(self):
         test_files = [
@@ -1124,13 +1124,12 @@
         self._test_run_latest(mock_time=mock_time)
         self.assertEqual(1, mock_time.sleep_interval)
 
-    @unittest.expectedFailure
     def test_run_latest_defaults_to_current(self):
         self.assertEqual(None, self.update_handler.get_latest_agent())
 
         args, kwargs = self._test_run_latest()
 
-        self.assertEqual(args[0], [get_python_cmd(), "-u", sys.argv[0], "-run-exthandlers"])
+        self.assertEqual(' '.join(args[0]), ' '.join([get_python_cmd(), "-u", sys.argv[0], "-run-exthandlers"]))
         self.assertEqual(True, 'cwd' in kwargs)
         self.assertEqual(os.getcwd(), kwargs['cwd'])
 
diff -x.pc -xdebian -x.git -Naur os-walinuxagent/tests/utils/test_rest_util.py os-walinuxagent-pexip/tests/utils/test_rest_util.py
--- os-walinuxagent/tests/utils/test_rest_util.py	2022-07-22 15:25:51.704491675 +0100
+++ os-walinuxagent-pexip/tests/utils/test_rest_util.py	2022-07-22 15:26:28.724453133 +0100
@@ -177,15 +177,15 @@
         for x in urls_tuples:
             self.assertEquals(restutil.redact_sas_tokens_in_urls(x[0]), x[1])
 
-    @skip_if_predicate_true(lambda: os.environ.get('https_proxy') is not None, "Skip if proxy is defined")
     @patch('azurelinuxagent.common.conf.get_httpproxy_port')
     @patch('azurelinuxagent.common.conf.get_httpproxy_host')
     def test_get_http_proxy_none_is_default(self, mock_host, mock_port):
         mock_host.return_value = None
         mock_port.return_value = None
-        h, p = restutil._get_http_proxy()
-        self.assertEqual(None, h)
-        self.assertEqual(None, p)
+        with patch.dict(os.environ, {}, True):
+            h, p = restutil._get_http_proxy()
+            self.assertEqual(None, h)
+            self.assertEqual(None, p)
 
     @patch('azurelinuxagent.common.conf.get_httpproxy_port')
     @patch('azurelinuxagent.common.conf.get_httpproxy_host')
@@ -198,17 +198,17 @@
         self.assertEqual(1, mock_host.call_count)
         self.assertEqual(1, mock_port.call_count)
 
-    @skip_if_predicate_true(lambda: os.environ.get('https_proxy') is not None, "Skip if proxy is defined")
     @patch('azurelinuxagent.common.conf.get_httpproxy_port')
     @patch('azurelinuxagent.common.conf.get_httpproxy_host')
     def test_get_http_proxy_configuration_requires_host(self, mock_host, mock_port):
         mock_host.return_value = None
         mock_port.return_value = None
-        h, p = restutil._get_http_proxy()
-        self.assertEqual(None, h)
-        self.assertEqual(None, p)
-        self.assertEqual(1, mock_host.call_count)
-        self.assertEqual(0, mock_port.call_count)
+        with patch.dict(os.environ, {}, True):
+            h, p = restutil._get_http_proxy()
+            self.assertEqual(None, h)
+            self.assertEqual(None, p)
+            self.assertEqual(1, mock_host.call_count)
+            self.assertEqual(0, mock_port.call_count)
 
     @patch('azurelinuxagent.common.conf.get_httpproxy_host')
     def test_get_http_proxy_http_uses_httpproxy(self, mock_host):
@@ -285,8 +285,9 @@
                 self.assertEqual(i, j)
 
     def test_get_no_proxy_default(self):
-        no_proxy_generator = restutil.get_no_proxy()
-        self.assertIsNone(no_proxy_generator)
+        with patch.dict(os.environ, clear=True):
+            no_proxy_generator = restutil.get_no_proxy()
+            self.assertIsNone(no_proxy_generator)
 
     def test_is_ipv4_address(self):
         self.assertTrue(restutil.is_ipv4_address('8.8.8.8'))
